theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(viridis)
library(shiny)
library(leaflet)
rm(list = ls())
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(viridis)
library(shiny)
library(leaflet)
rm(list = ls())
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(viridis)
library(shiny)
library(leaflet)
rm(list = ls())
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(viridis)
library(shiny)
library(leaflet)
rm(list = ls())
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(viridis)
library(shiny)
library(leaflet)
rm(list = ls())
setwd("C:/Users/Eirik/OneDrive/College/Senior/Data 332/final_project")
# read csv file
df <- read.csv("data/hotels_motels.csv") %>%
separate(the_geom, into = c("type", "longitude", "latitude"), sep = " ")
# remove parentheses from latitude and longitude columns
df$latitude <- gsub("\\(|\\)", "", df$latitude)
df$longitude <- gsub("\\(|\\)", "", df$longitude)
# convert latitude and longitude columns to numeric values
df$latitude <- as.numeric(df$latitude)
df$longitude <- as.numeric(df$longitude)
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabSetPanel(
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
)))
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
)))
# Define the server
server <- function(input, output) {
# Count by busn type
output$busn_type_plot <- renderPlot({
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
})
# Map of Places
output$map <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(data = df, lat = ~latitude, lng = ~longitude)
})
}
shinyApp(ui, server)
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Introduction",
textOutput("intro_text")),
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
)))
# Define the server
server <- function(input, output) {
#Intro paragraph explaining project
output$intro_text <-renderText({
"Explanation of our project"
})
# Count by busn type
output$busn_type_plot <- renderPlot({
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
})
# Map of Places
output$map <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(data = df, lat = ~latitude, lng = ~longitude)
})
}
shinyApp(ui, server)
View(df)
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Introduction",
textOutput("intro_text")),
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
tabPanel("Business Start Date",
fluidRow(
column(plotOutput("start_date"))
))
)))
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Introduction",
textOutput("intro_text")),
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
tabPanel("Business Start Date",
fluidRow(
column(12, plotOutput("start_date"))
))
)))
# Define the server
server <- function(input, output) {
#Intro paragraph explaining project
output$intro_text <-renderText({
"Explanation of our project"
})
# Count by busn type
output$busn_type_plot <- renderPlot({
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
})
# Map of Places
output$map <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(data = df, lat = ~latitude, lng = ~longitude)
})
# Business Start Date
output$start_date <- renderPlot({
ggplot(data, aes(x = BusinessStartDate)) +
geom_line(stat = "count") +
labs(x = "Business Start Date", y = "Count") +
ggtitle("Trend of New Business Start Dates")
})
}
shinyApp(ui, server)
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Introduction",
textOutput("intro_text")),
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
tabPanel("Business Start Date",
fluidRow(
column(12, plotOutput("start_date"))
))
)))
# Define the server
server <- function(input, output) {
#Intro paragraph explaining project
output$intro_text <-renderText({
"Explanation of our project"
})
# Count by busn type
output$busn_type_plot <- renderPlot({
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
})
# Map of Places
output$map <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(data = df, lat = ~latitude, lng = ~longitude)
})
# Business Start Date
output$start_date <- renderPlot({
ggplot(df, aes(x = BusinessStartDate)) +
geom_line(stat = "count") +
labs(x = "Business Start Date", y = "Count") +
ggtitle("Trend of New Business Start Dates")
})
}
shinyApp(ui, server)
shinyApp(ui, server)
View(df)
View(df)
# read csv file
df <- read.csv("data/hotels_motels.csv") %>%
separate(the_geom, into = c(NA, "longitude", "latitude"), sep = " ")
# remove parentheses from latitude and longitude columns
df$latitude <- gsub("\\(|\\)", "", df$latitude)
df$longitude <- gsub("\\(|\\)", "", df$longitude)
View(df)
# convert latitude and longitude columns to numeric values
df$latitude <- as.numeric(df$latitude)
df$longitude <- as.numeric(df$longitude)
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Introduction",
textOutput("intro_text")),
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
tabPanel("Business Start Date",
fluidRow(
column(12, plotOutput("start_date"))
))
)))
# Define the server
server <- function(input, output) {
#Intro paragraph explaining project
output$intro_text <-renderText({
"Explanation of our project"
})
# Count by busn type
output$busn_type_plot <- renderPlot({
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
})
# Map of Places
output$map <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(data = df, lat = ~latitude, lng = ~longitude)
})
# Business Start Date
output$start_date <- renderPlot({
ggplot(df, aes(x = BusinessStartDate)) +
geom_line(stat = "count") +
labs(x = "Business Start Date", y = "Count") +
ggtitle("Trend of New Business Start Dates")
})
}
shinyApp(ui, server)
# read csv file
df <- read.csv("data/hotels_motels.csv") %>%
separate(the_geom, into = c(NA, "longitude", "latitude"), sep = " ")
# remove parentheses from latitude and longitude columns
df$latitude <- gsub("\\(|\\)", "", df$latitude)
df$longitude <- gsub("\\(|\\)", "", df$longitude)
# convert latitude and longitude columns to numeric values
df$latitude <- as.numeric(df$latitude)
df$longitude <- as.numeric(df$longitude)
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Introduction",
textOutput("intro_text")),
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
tabPanel("Business Start Date",
fluidRow(
column(12, plotOutput("start_date"))
))
)))
# Define the server
server <- function(input, output) {
#Intro paragraph explaining project
output$intro_text <-renderText({
"Explanation of our project"
})
# Count by busn type
output$busn_type_plot <- renderPlot({
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
})
# Map of Places
output$map <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(data = df, lat = ~latitude, lng = ~longitude)
})
# Business Start Date
output$start_date <- renderPlot({
ggplot(df, aes(x = BusinessStartDate)) +
geom_line(stat = "count") +
labs(x = "Business Start Date", y = "Count") +
ggtitle("Trend of New Business Start Dates")
})
}
shinyApp(ui, server)
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Introduction",
textOutput("intro_text")),
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
tabPanel("Business Start Date",
fluidRow(
column(12, plotOutput("start_date"))
))
)))
# Define the server
server <- function(input, output) {
#Intro paragraph explaining project
output$intro_text <-renderText({
"Explanation of our project"
})
# Count by busn type
output$busn_type_plot <- renderPlot({
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
})
# Map of Places
output$map <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(data = df, lat = ~latitude, lng = ~longitude)
})
# Business Start Date
output$start_date <- renderPlot({
start_date <- df %>%
group_by(BusinessStartDate) %>%
summarise(count = n())
ggplot(start_date, aes(x = BusinessStartDate)) +
geom_line(stat = "count") +
labs(x = "Business Start Date", y = "Count") +
ggtitle("Trend of New Business Start Dates")
})
}
shinyApp(ui, server)
View(df)
# Define the UI
ui <- fluidPage(
titlePanel("Stays in New Orleans"),
mainPanel(
tabsetPanel(
tabPanel("Introduction",
textOutput("intro_text")),
tabPanel("Map of Hotels, Motels, and Rentals",
fluidRow(
column(12, leafletOutput("map"))
)),
tabPanel("Count by Business Type",
fluidRow(
column(12, plotOutput("busn_type_plot"))
)),
tabPanel("Business Start Date",
fluidRow(
column(12, plotOutput("start_date"))
))
)))
# Define the server
server <- function(input, output) {
#Intro paragraph explaining project
output$intro_text <-renderText({
"Explanation of our project"
})
# Count by busn type
output$busn_type_plot <- renderPlot({
# pivot showing count of each busn type
busn_type <- df %>%
group_by(BusinessType) %>%
summarise(count = n())
ggplot(busn_type, aes(x = BusinessType, y = count)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(x = "Business Type", y = "Count", title = "Business Type Counts")
})
# Map of Places
output$map <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(data = df, lat = ~latitude, lng = ~longitude)
})
# Business Start Date
output$start_date <- renderPlot({
start_date <- df %>%
group_by(BusinessStartDate) %>%
summarise(count = n())
ggplot(start_date, aes(x = BusinessStartDate, y = Count)) +
geom_line(stat = "count") +
labs(x = "Business Start Date", y = "Count") +
ggtitle("Trend of New Business Start Dates")
})
}
shinyApp(ui, server)
